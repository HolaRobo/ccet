#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LabManage
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LabManageDB")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAdminInfo(AdminInfo instance);
    partial void UpdateAdminInfo(AdminInfo instance);
    partial void DeleteAdminInfo(AdminInfo instance);
    partial void InsertTeacherInfo(TeacherInfo instance);
    partial void UpdateTeacherInfo(TeacherInfo instance);
    partial void DeleteTeacherInfo(TeacherInfo instance);
    partial void InsertCenterframeworkData(CenterframeworkData instance);
    partial void UpdateCenterframeworkData(CenterframeworkData instance);
    partial void DeleteCenterframeworkData(CenterframeworkData instance);
    partial void InsertDrviceMaintenance(DrviceMaintenance instance);
    partial void UpdateDrviceMaintenance(DrviceMaintenance instance);
    partial void DeleteDrviceMaintenance(DrviceMaintenance instance);
    partial void InsertLabAppointment(LabAppointment instance);
    partial void UpdateLabAppointment(LabAppointment instance);
    partial void DeleteLabAppointment(LabAppointment instance);
    partial void InsertLabInfo(LabInfo instance);
    partial void UpdateLabInfo(LabInfo instance);
    partial void DeleteLabInfo(LabInfo instance);
    partial void InsertLabInfo_LabType(LabInfo_LabType instance);
    partial void UpdateLabInfo_LabType(LabInfo_LabType instance);
    partial void DeleteLabInfo_LabType(LabInfo_LabType instance);
    partial void InsertLabManageSystem(LabManageSystem instance);
    partial void UpdateLabManageSystem(LabManageSystem instance);
    partial void DeleteLabManageSystem(LabManageSystem instance);
    partial void InsertLabSafetyInfo(LabSafetyInfo instance);
    partial void UpdateLabSafetyInfo(LabSafetyInfo instance);
    partial void DeleteLabSafetyInfo(LabSafetyInfo instance);
    partial void InsertLeaveMessage(LeaveMessage instance);
    partial void UpdateLeaveMessage(LeaveMessage instance);
    partial void DeleteLeaveMessage(LeaveMessage instance);
    partial void InsertNewsInfo(NewsInfo instance);
    partial void UpdateNewsInfo(NewsInfo instance);
    partial void DeleteNewsInfo(NewsInfo instance);
    partial void InsertResourceFile(ResourceFile instance);
    partial void UpdateResourceFile(ResourceFile instance);
    partial void DeleteResourceFile(ResourceFile instance);
    partial void InsertSysSet(SysSet instance);
    partial void UpdateSysSet(SysSet instance);
    partial void DeleteSysSet(SysSet instance);
    #endregion
		
		public dbDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["LabManageDBConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AdminInfo> AdminInfo
		{
			get
			{
				return this.GetTable<AdminInfo>();
			}
		}
		
		public System.Data.Linq.Table<TeacherInfo> TeacherInfo
		{
			get
			{
				return this.GetTable<TeacherInfo>();
			}
		}
		
		public System.Data.Linq.Table<CenterframeworkData> CenterframeworkData
		{
			get
			{
				return this.GetTable<CenterframeworkData>();
			}
		}
		
		public System.Data.Linq.Table<DrviceMaintenance> DrviceMaintenance
		{
			get
			{
				return this.GetTable<DrviceMaintenance>();
			}
		}
		
		public System.Data.Linq.Table<LabAppointment> LabAppointment
		{
			get
			{
				return this.GetTable<LabAppointment>();
			}
		}
		
		public System.Data.Linq.Table<LabInfo> LabInfo
		{
			get
			{
				return this.GetTable<LabInfo>();
			}
		}
		
		public System.Data.Linq.Table<LabInfo_LabType> LabInfo_LabType
		{
			get
			{
				return this.GetTable<LabInfo_LabType>();
			}
		}
		
		public System.Data.Linq.Table<LabManageSystem> LabManageSystem
		{
			get
			{
				return this.GetTable<LabManageSystem>();
			}
		}
		
		public System.Data.Linq.Table<LabSafetyInfo> LabSafetyInfo
		{
			get
			{
				return this.GetTable<LabSafetyInfo>();
			}
		}
		
		public System.Data.Linq.Table<LeaveMessage> LeaveMessage
		{
			get
			{
				return this.GetTable<LeaveMessage>();
			}
		}
		
		public System.Data.Linq.Table<Newlab> Newlab
		{
			get
			{
				return this.GetTable<Newlab>();
			}
		}
		
		public System.Data.Linq.Table<NewsInfo> NewsInfo
		{
			get
			{
				return this.GetTable<NewsInfo>();
			}
		}
		
		public System.Data.Linq.Table<ResourceFile> ResourceFile
		{
			get
			{
				return this.GetTable<ResourceFile>();
			}
		}
		
		public System.Data.Linq.Table<SysSet> SysSet
		{
			get
			{
				return this.GetTable<SysSet>();
			}
		}
		
		public System.Data.Linq.Table<LostAndFound_Student> LostAndFound_Student
		{
			get
			{
				return this.GetTable<LostAndFound_Student>();
			}
		}
		
		public System.Data.Linq.Table<LostAndFound_Admin> LostAndFound_Admin
		{
			get
			{
				return this.GetTable<LostAndFound_Admin>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminInfo")]
	public partial class AdminInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AdminID;
		
		private string _AdminName;
		
		private string _AdminPwd;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAdminIDChanging(int value);
    partial void OnAdminIDChanged();
    partial void OnAdminNameChanging(string value);
    partial void OnAdminNameChanged();
    partial void OnAdminPwdChanging(string value);
    partial void OnAdminPwdChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public AdminInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminName", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string AdminName
		{
			get
			{
				return this._AdminName;
			}
			set
			{
				if ((this._AdminName != value))
				{
					this.OnAdminNameChanging(value);
					this.SendPropertyChanging();
					this._AdminName = value;
					this.SendPropertyChanged("AdminName");
					this.OnAdminNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminPwd", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string AdminPwd
		{
			get
			{
				return this._AdminPwd;
			}
			set
			{
				if ((this._AdminPwd != value))
				{
					this.OnAdminPwdChanging(value);
					this.SendPropertyChanging();
					this._AdminPwd = value;
					this.SendPropertyChanged("AdminPwd");
					this.OnAdminPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeacherInfo")]
	public partial class TeacherInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeacherID;
		
		private string _TeacherName;
		
		private string _TeacherPwd;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
		private EntitySet<LabAppointment> _LabAppointment;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeacherIDChanging(int value);
    partial void OnTeacherIDChanged();
    partial void OnTeacherNameChanging(string value);
    partial void OnTeacherNameChanged();
    partial void OnTeacherPwdChanging(string value);
    partial void OnTeacherPwdChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public TeacherInfo()
		{
			this._LabAppointment = new EntitySet<LabAppointment>(new Action<LabAppointment>(this.attach_LabAppointment), new Action<LabAppointment>(this.detach_LabAppointment));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					this.OnTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._TeacherID = value;
					this.SendPropertyChanged("TeacherID");
					this.OnTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherName", DbType="NVarChar(30)")]
		public string TeacherName
		{
			get
			{
				return this._TeacherName;
			}
			set
			{
				if ((this._TeacherName != value))
				{
					this.OnTeacherNameChanging(value);
					this.SendPropertyChanging();
					this._TeacherName = value;
					this.SendPropertyChanged("TeacherName");
					this.OnTeacherNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherPwd", DbType="NVarChar(50)")]
		public string TeacherPwd
		{
			get
			{
				return this._TeacherPwd;
			}
			set
			{
				if ((this._TeacherPwd != value))
				{
					this.OnTeacherPwdChanging(value);
					this.SendPropertyChanging();
					this._TeacherPwd = value;
					this.SendPropertyChanged("TeacherPwd");
					this.OnTeacherPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeacherInfo_LabAppointment", Storage="_LabAppointment", ThisKey="TeacherID", OtherKey="TeacherID")]
		public EntitySet<LabAppointment> LabAppointment
		{
			get
			{
				return this._LabAppointment;
			}
			set
			{
				this._LabAppointment.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LabAppointment(LabAppointment entity)
		{
			this.SendPropertyChanging();
			entity.TeacherInfo = this;
		}
		
		private void detach_LabAppointment(LabAppointment entity)
		{
			this.SendPropertyChanging();
			entity.TeacherInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CenterframeworkData")]
	public partial class CenterframeworkData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CenterframeworkID;
		
		private string _CenterframeworkName;
		
		private string _CenterframeworkContent;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCenterframeworkIDChanging(int value);
    partial void OnCenterframeworkIDChanged();
    partial void OnCenterframeworkNameChanging(string value);
    partial void OnCenterframeworkNameChanged();
    partial void OnCenterframeworkContentChanging(string value);
    partial void OnCenterframeworkContentChanged();
    #endregion
		
		public CenterframeworkData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterframeworkID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CenterframeworkID
		{
			get
			{
				return this._CenterframeworkID;
			}
			set
			{
				if ((this._CenterframeworkID != value))
				{
					this.OnCenterframeworkIDChanging(value);
					this.SendPropertyChanging();
					this._CenterframeworkID = value;
					this.SendPropertyChanged("CenterframeworkID");
					this.OnCenterframeworkIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterframeworkName", DbType="NVarChar(50)")]
		public string CenterframeworkName
		{
			get
			{
				return this._CenterframeworkName;
			}
			set
			{
				if ((this._CenterframeworkName != value))
				{
					this.OnCenterframeworkNameChanging(value);
					this.SendPropertyChanging();
					this._CenterframeworkName = value;
					this.SendPropertyChanged("CenterframeworkName");
					this.OnCenterframeworkNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterframeworkContent", DbType="NVarChar(MAX)")]
		public string CenterframeworkContent
		{
			get
			{
				return this._CenterframeworkContent;
			}
			set
			{
				if ((this._CenterframeworkContent != value))
				{
					this.OnCenterframeworkContentChanging(value);
					this.SendPropertyChanging();
					this._CenterframeworkContent = value;
					this.SendPropertyChanged("CenterframeworkContent");
					this.OnCenterframeworkContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DrviceMaintenance")]
	public partial class DrviceMaintenance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DrviceMaintenanceID;
		
		private string _DrviceMaintenanceTitle;
		
		private string _DrviceMaintenancePath;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDrviceMaintenanceIDChanging(int value);
    partial void OnDrviceMaintenanceIDChanged();
    partial void OnDrviceMaintenanceTitleChanging(string value);
    partial void OnDrviceMaintenanceTitleChanged();
    partial void OnDrviceMaintenancePathChanging(string value);
    partial void OnDrviceMaintenancePathChanged();
    #endregion
		
		public DrviceMaintenance()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrviceMaintenanceID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DrviceMaintenanceID
		{
			get
			{
				return this._DrviceMaintenanceID;
			}
			set
			{
				if ((this._DrviceMaintenanceID != value))
				{
					this.OnDrviceMaintenanceIDChanging(value);
					this.SendPropertyChanging();
					this._DrviceMaintenanceID = value;
					this.SendPropertyChanged("DrviceMaintenanceID");
					this.OnDrviceMaintenanceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrviceMaintenanceTitle", DbType="NVarChar(50)")]
		public string DrviceMaintenanceTitle
		{
			get
			{
				return this._DrviceMaintenanceTitle;
			}
			set
			{
				if ((this._DrviceMaintenanceTitle != value))
				{
					this.OnDrviceMaintenanceTitleChanging(value);
					this.SendPropertyChanging();
					this._DrviceMaintenanceTitle = value;
					this.SendPropertyChanged("DrviceMaintenanceTitle");
					this.OnDrviceMaintenanceTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DrviceMaintenancePath", DbType="VarChar(150)")]
		public string DrviceMaintenancePath
		{
			get
			{
				return this._DrviceMaintenancePath;
			}
			set
			{
				if ((this._DrviceMaintenancePath != value))
				{
					this.OnDrviceMaintenancePathChanging(value);
					this.SendPropertyChanging();
					this._DrviceMaintenancePath = value;
					this.SendPropertyChanged("DrviceMaintenancePath");
					this.OnDrviceMaintenancePathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabAppointment")]
	public partial class LabAppointment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AppointmentID;
		
		private System.Nullable<int> _LabID;
		
		private System.Nullable<int> _TeacherID;
		
		private string _TeacherLeaveMessage;
		
		private System.Nullable<System.DateTime> _AppointmentDate;
		
		private System.Nullable<int> _AppSection;
		
		private System.Nullable<bool> _AdminAllow;
		
		private string _AdminReason;
		
		private EntityRef<TeacherInfo> _TeacherInfo;
		
		private EntityRef<LabInfo> _LabInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAppointmentIDChanging(int value);
    partial void OnAppointmentIDChanged();
    partial void OnLabIDChanging(System.Nullable<int> value);
    partial void OnLabIDChanged();
    partial void OnTeacherIDChanging(System.Nullable<int> value);
    partial void OnTeacherIDChanged();
    partial void OnTeacherLeaveMessageChanging(string value);
    partial void OnTeacherLeaveMessageChanged();
    partial void OnAppointmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAppointmentDateChanged();
    partial void OnAppSectionChanging(System.Nullable<int> value);
    partial void OnAppSectionChanged();
    partial void OnAdminAllowChanging(System.Nullable<bool> value);
    partial void OnAdminAllowChanged();
    partial void OnAdminReasonChanging(string value);
    partial void OnAdminReasonChanged();
    #endregion
		
		public LabAppointment()
		{
			this._TeacherInfo = default(EntityRef<TeacherInfo>);
			this._LabInfo = default(EntityRef<LabInfo>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppointmentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AppointmentID
		{
			get
			{
				return this._AppointmentID;
			}
			set
			{
				if ((this._AppointmentID != value))
				{
					this.OnAppointmentIDChanging(value);
					this.SendPropertyChanging();
					this._AppointmentID = value;
					this.SendPropertyChanged("AppointmentID");
					this.OnAppointmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabID", DbType="Int")]
		public System.Nullable<int> LabID
		{
			get
			{
				return this._LabID;
			}
			set
			{
				if ((this._LabID != value))
				{
					if (this._LabInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLabIDChanging(value);
					this.SendPropertyChanging();
					this._LabID = value;
					this.SendPropertyChanged("LabID");
					this.OnLabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherID", DbType="Int")]
		public System.Nullable<int> TeacherID
		{
			get
			{
				return this._TeacherID;
			}
			set
			{
				if ((this._TeacherID != value))
				{
					if (this._TeacherInfo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeacherIDChanging(value);
					this.SendPropertyChanging();
					this._TeacherID = value;
					this.SendPropertyChanged("TeacherID");
					this.OnTeacherIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherLeaveMessage", DbType="NVarChar(MAX)")]
		public string TeacherLeaveMessage
		{
			get
			{
				return this._TeacherLeaveMessage;
			}
			set
			{
				if ((this._TeacherLeaveMessage != value))
				{
					this.OnTeacherLeaveMessageChanging(value);
					this.SendPropertyChanging();
					this._TeacherLeaveMessage = value;
					this.SendPropertyChanged("TeacherLeaveMessage");
					this.OnTeacherLeaveMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppointmentDate", DbType="Date")]
		public System.Nullable<System.DateTime> AppointmentDate
		{
			get
			{
				return this._AppointmentDate;
			}
			set
			{
				if ((this._AppointmentDate != value))
				{
					this.OnAppointmentDateChanging(value);
					this.SendPropertyChanging();
					this._AppointmentDate = value;
					this.SendPropertyChanged("AppointmentDate");
					this.OnAppointmentDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppSection", DbType="Int")]
		public System.Nullable<int> AppSection
		{
			get
			{
				return this._AppSection;
			}
			set
			{
				if ((this._AppSection != value))
				{
					this.OnAppSectionChanging(value);
					this.SendPropertyChanging();
					this._AppSection = value;
					this.SendPropertyChanged("AppSection");
					this.OnAppSectionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminAllow", DbType="Bit")]
		public System.Nullable<bool> AdminAllow
		{
			get
			{
				return this._AdminAllow;
			}
			set
			{
				if ((this._AdminAllow != value))
				{
					this.OnAdminAllowChanging(value);
					this.SendPropertyChanging();
					this._AdminAllow = value;
					this.SendPropertyChanged("AdminAllow");
					this.OnAdminAllowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminReason", DbType="NVarChar(MAX)")]
		public string AdminReason
		{
			get
			{
				return this._AdminReason;
			}
			set
			{
				if ((this._AdminReason != value))
				{
					this.OnAdminReasonChanging(value);
					this.SendPropertyChanging();
					this._AdminReason = value;
					this.SendPropertyChanged("AdminReason");
					this.OnAdminReasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TeacherInfo_LabAppointment", Storage="_TeacherInfo", ThisKey="TeacherID", OtherKey="TeacherID", IsForeignKey=true)]
		public TeacherInfo TeacherInfo
		{
			get
			{
				return this._TeacherInfo.Entity;
			}
			set
			{
				TeacherInfo previousValue = this._TeacherInfo.Entity;
				if (((previousValue != value) 
							|| (this._TeacherInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TeacherInfo.Entity = null;
						previousValue.LabAppointment.Remove(this);
					}
					this._TeacherInfo.Entity = value;
					if ((value != null))
					{
						value.LabAppointment.Add(this);
						this._TeacherID = value.TeacherID;
					}
					else
					{
						this._TeacherID = default(Nullable<int>);
					}
					this.SendPropertyChanged("TeacherInfo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabInfo_LabAppointment", Storage="_LabInfo", ThisKey="LabID", OtherKey="LabID", IsForeignKey=true)]
		public LabInfo LabInfo
		{
			get
			{
				return this._LabInfo.Entity;
			}
			set
			{
				LabInfo previousValue = this._LabInfo.Entity;
				if (((previousValue != value) 
							|| (this._LabInfo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LabInfo.Entity = null;
						previousValue.LabAppointment.Remove(this);
					}
					this._LabInfo.Entity = value;
					if ((value != null))
					{
						value.LabAppointment.Add(this);
						this._LabID = value.LabID;
					}
					else
					{
						this._LabID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LabInfo");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabInfo")]
	public partial class LabInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LabID;
		
		private string _LabName;
		
		private System.Nullable<int> _LabTypeID;
		
		private System.Nullable<int> _MaxNO;
		
		private EntitySet<LabAppointment> _LabAppointment;
		
		private EntityRef<LabInfo_LabType> _LabInfo_LabType;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLabIDChanging(int value);
    partial void OnLabIDChanged();
    partial void OnLabNameChanging(string value);
    partial void OnLabNameChanged();
    partial void OnLabTypeIDChanging(System.Nullable<int> value);
    partial void OnLabTypeIDChanged();
    partial void OnMaxNOChanging(System.Nullable<int> value);
    partial void OnMaxNOChanged();
    #endregion
		
		public LabInfo()
		{
			this._LabAppointment = new EntitySet<LabAppointment>(new Action<LabAppointment>(this.attach_LabAppointment), new Action<LabAppointment>(this.detach_LabAppointment));
			this._LabInfo_LabType = default(EntityRef<LabInfo_LabType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LabID
		{
			get
			{
				return this._LabID;
			}
			set
			{
				if ((this._LabID != value))
				{
					this.OnLabIDChanging(value);
					this.SendPropertyChanging();
					this._LabID = value;
					this.SendPropertyChanged("LabID");
					this.OnLabIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabName", DbType="NVarChar(30)")]
		public string LabName
		{
			get
			{
				return this._LabName;
			}
			set
			{
				if ((this._LabName != value))
				{
					this.OnLabNameChanging(value);
					this.SendPropertyChanging();
					this._LabName = value;
					this.SendPropertyChanged("LabName");
					this.OnLabNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabTypeID", DbType="Int")]
		public System.Nullable<int> LabTypeID
		{
			get
			{
				return this._LabTypeID;
			}
			set
			{
				if ((this._LabTypeID != value))
				{
					if (this._LabInfo_LabType.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLabTypeIDChanging(value);
					this.SendPropertyChanging();
					this._LabTypeID = value;
					this.SendPropertyChanged("LabTypeID");
					this.OnLabTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxNO", DbType="Int")]
		public System.Nullable<int> MaxNO
		{
			get
			{
				return this._MaxNO;
			}
			set
			{
				if ((this._MaxNO != value))
				{
					this.OnMaxNOChanging(value);
					this.SendPropertyChanging();
					this._MaxNO = value;
					this.SendPropertyChanged("MaxNO");
					this.OnMaxNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabInfo_LabAppointment", Storage="_LabAppointment", ThisKey="LabID", OtherKey="LabID")]
		public EntitySet<LabAppointment> LabAppointment
		{
			get
			{
				return this._LabAppointment;
			}
			set
			{
				this._LabAppointment.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabInfo_LabType_LabInfo", Storage="_LabInfo_LabType", ThisKey="LabTypeID", OtherKey="LabTypeID", IsForeignKey=true, DeleteRule="CASCADE")]
		public LabInfo_LabType LabInfo_LabType
		{
			get
			{
				return this._LabInfo_LabType.Entity;
			}
			set
			{
				LabInfo_LabType previousValue = this._LabInfo_LabType.Entity;
				if (((previousValue != value) 
							|| (this._LabInfo_LabType.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LabInfo_LabType.Entity = null;
						previousValue.LabInfo.Remove(this);
					}
					this._LabInfo_LabType.Entity = value;
					if ((value != null))
					{
						value.LabInfo.Add(this);
						this._LabTypeID = value.LabTypeID;
					}
					else
					{
						this._LabTypeID = default(Nullable<int>);
					}
					this.SendPropertyChanged("LabInfo_LabType");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LabAppointment(LabAppointment entity)
		{
			this.SendPropertyChanging();
			entity.LabInfo = this;
		}
		
		private void detach_LabAppointment(LabAppointment entity)
		{
			this.SendPropertyChanging();
			entity.LabInfo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabInfo_LabType")]
	public partial class LabInfo_LabType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LabTypeID;
		
		private string _LabTypeName;
		
		private EntitySet<LabInfo> _LabInfo;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLabTypeIDChanging(int value);
    partial void OnLabTypeIDChanged();
    partial void OnLabTypeNameChanging(string value);
    partial void OnLabTypeNameChanged();
    #endregion
		
		public LabInfo_LabType()
		{
			this._LabInfo = new EntitySet<LabInfo>(new Action<LabInfo>(this.attach_LabInfo), new Action<LabInfo>(this.detach_LabInfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabTypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LabTypeID
		{
			get
			{
				return this._LabTypeID;
			}
			set
			{
				if ((this._LabTypeID != value))
				{
					this.OnLabTypeIDChanging(value);
					this.SendPropertyChanging();
					this._LabTypeID = value;
					this.SendPropertyChanged("LabTypeID");
					this.OnLabTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabTypeName", DbType="NVarChar(50)")]
		public string LabTypeName
		{
			get
			{
				return this._LabTypeName;
			}
			set
			{
				if ((this._LabTypeName != value))
				{
					this.OnLabTypeNameChanging(value);
					this.SendPropertyChanging();
					this._LabTypeName = value;
					this.SendPropertyChanged("LabTypeName");
					this.OnLabTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LabInfo_LabType_LabInfo", Storage="_LabInfo", ThisKey="LabTypeID", OtherKey="LabTypeID")]
		public EntitySet<LabInfo> LabInfo
		{
			get
			{
				return this._LabInfo;
			}
			set
			{
				this._LabInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LabInfo(LabInfo entity)
		{
			this.SendPropertyChanging();
			entity.LabInfo_LabType = this;
		}
		
		private void detach_LabInfo(LabInfo entity)
		{
			this.SendPropertyChanging();
			entity.LabInfo_LabType = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabManageSystem")]
	public partial class LabManageSystem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LabManageSystemID;
		
		private string _LabManageSystemTitle;
		
		private string _LabManageSystemContent;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLabManageSystemIDChanging(int value);
    partial void OnLabManageSystemIDChanged();
    partial void OnLabManageSystemTitleChanging(string value);
    partial void OnLabManageSystemTitleChanged();
    partial void OnLabManageSystemContentChanging(string value);
    partial void OnLabManageSystemContentChanged();
    #endregion
		
		public LabManageSystem()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabManageSystemID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LabManageSystemID
		{
			get
			{
				return this._LabManageSystemID;
			}
			set
			{
				if ((this._LabManageSystemID != value))
				{
					this.OnLabManageSystemIDChanging(value);
					this.SendPropertyChanging();
					this._LabManageSystemID = value;
					this.SendPropertyChanged("LabManageSystemID");
					this.OnLabManageSystemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabManageSystemTitle", DbType="NVarChar(150)")]
		public string LabManageSystemTitle
		{
			get
			{
				return this._LabManageSystemTitle;
			}
			set
			{
				if ((this._LabManageSystemTitle != value))
				{
					this.OnLabManageSystemTitleChanging(value);
					this.SendPropertyChanging();
					this._LabManageSystemTitle = value;
					this.SendPropertyChanged("LabManageSystemTitle");
					this.OnLabManageSystemTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabManageSystemContent", DbType="NVarChar(MAX)")]
		public string LabManageSystemContent
		{
			get
			{
				return this._LabManageSystemContent;
			}
			set
			{
				if ((this._LabManageSystemContent != value))
				{
					this.OnLabManageSystemContentChanging(value);
					this.SendPropertyChanging();
					this._LabManageSystemContent = value;
					this.SendPropertyChanged("LabManageSystemContent");
					this.OnLabManageSystemContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LabSafetyInfo")]
	public partial class LabSafetyInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LabSafetyID;
		
		private string _LabSafetyTitle;
		
		private string _LabSafetyContent;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLabSafetyIDChanging(int value);
    partial void OnLabSafetyIDChanged();
    partial void OnLabSafetyTitleChanging(string value);
    partial void OnLabSafetyTitleChanged();
    partial void OnLabSafetyContentChanging(string value);
    partial void OnLabSafetyContentChanged();
    #endregion
		
		public LabSafetyInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabSafetyID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LabSafetyID
		{
			get
			{
				return this._LabSafetyID;
			}
			set
			{
				if ((this._LabSafetyID != value))
				{
					this.OnLabSafetyIDChanging(value);
					this.SendPropertyChanging();
					this._LabSafetyID = value;
					this.SendPropertyChanged("LabSafetyID");
					this.OnLabSafetyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabSafetyTitle", DbType="NVarChar(150)")]
		public string LabSafetyTitle
		{
			get
			{
				return this._LabSafetyTitle;
			}
			set
			{
				if ((this._LabSafetyTitle != value))
				{
					this.OnLabSafetyTitleChanging(value);
					this.SendPropertyChanging();
					this._LabSafetyTitle = value;
					this.SendPropertyChanged("LabSafetyTitle");
					this.OnLabSafetyTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabSafetyContent", DbType="NVarChar(MAX)")]
		public string LabSafetyContent
		{
			get
			{
				return this._LabSafetyContent;
			}
			set
			{
				if ((this._LabSafetyContent != value))
				{
					this.OnLabSafetyContentChanging(value);
					this.SendPropertyChanging();
					this._LabSafetyContent = value;
					this.SendPropertyChanged("LabSafetyContent");
					this.OnLabSafetyContentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LeaveMessage")]
	public partial class LeaveMessage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LeaveMessageID;
		
		private string _LeaveManName;
		
		private System.Nullable<bool> _IsTeacher;
		
		private string _LeaveMessageContent;
		
		private System.Nullable<System.DateTime> _LeaveTime;
		
		private string _ReplyContent;
		
		private System.Nullable<System.DateTime> _ReplyTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLeaveMessageIDChanging(int value);
    partial void OnLeaveMessageIDChanged();
    partial void OnLeaveManNameChanging(string value);
    partial void OnLeaveManNameChanged();
    partial void OnIsTeacherChanging(System.Nullable<bool> value);
    partial void OnIsTeacherChanged();
    partial void OnLeaveMessageContentChanging(string value);
    partial void OnLeaveMessageContentChanged();
    partial void OnLeaveTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLeaveTimeChanged();
    partial void OnReplyContentChanging(string value);
    partial void OnReplyContentChanged();
    partial void OnReplyTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnReplyTimeChanged();
    #endregion
		
		public LeaveMessage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveMessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LeaveMessageID
		{
			get
			{
				return this._LeaveMessageID;
			}
			set
			{
				if ((this._LeaveMessageID != value))
				{
					this.OnLeaveMessageIDChanging(value);
					this.SendPropertyChanging();
					this._LeaveMessageID = value;
					this.SendPropertyChanged("LeaveMessageID");
					this.OnLeaveMessageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveManName", DbType="NVarChar(50)")]
		public string LeaveManName
		{
			get
			{
				return this._LeaveManName;
			}
			set
			{
				if ((this._LeaveManName != value))
				{
					this.OnLeaveManNameChanging(value);
					this.SendPropertyChanging();
					this._LeaveManName = value;
					this.SendPropertyChanged("LeaveManName");
					this.OnLeaveManNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTeacher", DbType="Bit")]
		public System.Nullable<bool> IsTeacher
		{
			get
			{
				return this._IsTeacher;
			}
			set
			{
				if ((this._IsTeacher != value))
				{
					this.OnIsTeacherChanging(value);
					this.SendPropertyChanging();
					this._IsTeacher = value;
					this.SendPropertyChanged("IsTeacher");
					this.OnIsTeacherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveMessageContent", DbType="NVarChar(500)")]
		public string LeaveMessageContent
		{
			get
			{
				return this._LeaveMessageContent;
			}
			set
			{
				if ((this._LeaveMessageContent != value))
				{
					this.OnLeaveMessageContentChanging(value);
					this.SendPropertyChanging();
					this._LeaveMessageContent = value;
					this.SendPropertyChanged("LeaveMessageContent");
					this.OnLeaveMessageContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LeaveTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LeaveTime
		{
			get
			{
				return this._LeaveTime;
			}
			set
			{
				if ((this._LeaveTime != value))
				{
					this.OnLeaveTimeChanging(value);
					this.SendPropertyChanging();
					this._LeaveTime = value;
					this.SendPropertyChanged("LeaveTime");
					this.OnLeaveTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyContent", DbType="NVarChar(500)")]
		public string ReplyContent
		{
			get
			{
				return this._ReplyContent;
			}
			set
			{
				if ((this._ReplyContent != value))
				{
					this.OnReplyContentChanging(value);
					this.SendPropertyChanging();
					this._ReplyContent = value;
					this.SendPropertyChanged("ReplyContent");
					this.OnReplyContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReplyTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReplyTime
		{
			get
			{
				return this._ReplyTime;
			}
			set
			{
				if ((this._ReplyTime != value))
				{
					this.OnReplyTimeChanging(value);
					this.SendPropertyChanging();
					this._ReplyTime = value;
					this.SendPropertyChanged("ReplyTime");
					this.OnReplyTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Newlab")]
	public partial class Newlab
	{
		
		private System.DateTime _Date;
		
		private string _Id;
		
		private string _Stage1;
		
		private string _Stage2;
		
		private string _Stage3;
		
		private string _Stage4;
		
		private string _Stage5;
		
		public Newlab()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date NOT NULL")]
		public System.DateTime Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stage1", DbType="NVarChar(50)")]
		public string Stage1
		{
			get
			{
				return this._Stage1;
			}
			set
			{
				if ((this._Stage1 != value))
				{
					this._Stage1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stage2", DbType="NVarChar(50)")]
		public string Stage2
		{
			get
			{
				return this._Stage2;
			}
			set
			{
				if ((this._Stage2 != value))
				{
					this._Stage2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stage3", DbType="NVarChar(50)")]
		public string Stage3
		{
			get
			{
				return this._Stage3;
			}
			set
			{
				if ((this._Stage3 != value))
				{
					this._Stage3 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stage4", DbType="NVarChar(50)")]
		public string Stage4
		{
			get
			{
				return this._Stage4;
			}
			set
			{
				if ((this._Stage4 != value))
				{
					this._Stage4 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stage5", DbType="NVarChar(50)")]
		public string Stage5
		{
			get
			{
				return this._Stage5;
			}
			set
			{
				if ((this._Stage5 != value))
				{
					this._Stage5 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NewsInfo")]
	public partial class NewsInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NewsID;
		
		private string _NewsTitle;
		
		private string _NewsContent;
		
		private System.Nullable<System.DateTime> _PublicTime;
		
		private System.Nullable<int> _AdminID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNewsIDChanging(int value);
    partial void OnNewsIDChanged();
    partial void OnNewsTitleChanging(string value);
    partial void OnNewsTitleChanged();
    partial void OnNewsContentChanging(string value);
    partial void OnNewsContentChanged();
    partial void OnPublicTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnPublicTimeChanged();
    partial void OnAdminIDChanging(System.Nullable<int> value);
    partial void OnAdminIDChanged();
    #endregion
		
		public NewsInfo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NewsID
		{
			get
			{
				return this._NewsID;
			}
			set
			{
				if ((this._NewsID != value))
				{
					this.OnNewsIDChanging(value);
					this.SendPropertyChanging();
					this._NewsID = value;
					this.SendPropertyChanged("NewsID");
					this.OnNewsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsTitle", DbType="NVarChar(100)")]
		public string NewsTitle
		{
			get
			{
				return this._NewsTitle;
			}
			set
			{
				if ((this._NewsTitle != value))
				{
					this.OnNewsTitleChanging(value);
					this.SendPropertyChanging();
					this._NewsTitle = value;
					this.SendPropertyChanged("NewsTitle");
					this.OnNewsTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsContent", DbType="NVarChar(MAX)")]
		public string NewsContent
		{
			get
			{
				return this._NewsContent;
			}
			set
			{
				if ((this._NewsContent != value))
				{
					this.OnNewsContentChanging(value);
					this.SendPropertyChanging();
					this._NewsContent = value;
					this.SendPropertyChanged("NewsContent");
					this.OnNewsContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublicTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublicTime
		{
			get
			{
				return this._PublicTime;
			}
			set
			{
				if ((this._PublicTime != value))
				{
					this.OnPublicTimeChanging(value);
					this.SendPropertyChanging();
					this._PublicTime = value;
					this.SendPropertyChanged("PublicTime");
					this.OnPublicTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdminID", DbType="Int")]
		public System.Nullable<int> AdminID
		{
			get
			{
				return this._AdminID;
			}
			set
			{
				if ((this._AdminID != value))
				{
					this.OnAdminIDChanging(value);
					this.SendPropertyChanging();
					this._AdminID = value;
					this.SendPropertyChanged("AdminID");
					this.OnAdminIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ResourceFile")]
	public partial class ResourceFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _FileID;
		
		private string _FileTitle;
		
		private string _FileTypeName;
		
		private string _FileName;
		
		private System.Nullable<System.DateTime> _CreateTime;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFileIDChanging(int value);
    partial void OnFileIDChanged();
    partial void OnFileTitleChanging(string value);
    partial void OnFileTitleChanged();
    partial void OnFileTypeNameChanging(string value);
    partial void OnFileTypeNameChanged();
    partial void OnFileNameChanging(string value);
    partial void OnFileNameChanged();
    partial void OnCreateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateTimeChanged();
    #endregion
		
		public ResourceFile()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int FileID
		{
			get
			{
				return this._FileID;
			}
			set
			{
				if ((this._FileID != value))
				{
					this.OnFileIDChanging(value);
					this.SendPropertyChanging();
					this._FileID = value;
					this.SendPropertyChanged("FileID");
					this.OnFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileTitle", DbType="NVarChar(50)")]
		public string FileTitle
		{
			get
			{
				return this._FileTitle;
			}
			set
			{
				if ((this._FileTitle != value))
				{
					this.OnFileTitleChanging(value);
					this.SendPropertyChanging();
					this._FileTitle = value;
					this.SendPropertyChanged("FileTitle");
					this.OnFileTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileTypeName", DbType="NVarChar(30)")]
		public string FileTypeName
		{
			get
			{
				return this._FileTypeName;
			}
			set
			{
				if ((this._FileTypeName != value))
				{
					this.OnFileTypeNameChanging(value);
					this.SendPropertyChanging();
					this._FileTypeName = value;
					this.SendPropertyChanged("FileTypeName");
					this.OnFileTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileName", DbType="VarChar(50)")]
		public string FileName
		{
			get
			{
				return this._FileName;
			}
			set
			{
				if ((this._FileName != value))
				{
					this.OnFileNameChanging(value);
					this.SendPropertyChanging();
					this._FileName = value;
					this.SendPropertyChanged("FileName");
					this.OnFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateTime
		{
			get
			{
				return this._CreateTime;
			}
			set
			{
				if ((this._CreateTime != value))
				{
					this.OnCreateTimeChanging(value);
					this.SendPropertyChanging();
					this._CreateTime = value;
					this.SendPropertyChanged("CreateTime");
					this.OnCreateTimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SysSet")]
	public partial class SysSet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SysID;
		
		private string _CenterAbstruct;
		
		private string _CenterTeam;
		
		private string _DevelopPlan;
		
		private string _StudentResult;
		
		private string _TeacherResult;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSysIDChanging(int value);
    partial void OnSysIDChanged();
    partial void OnCenterAbstructChanging(string value);
    partial void OnCenterAbstructChanged();
    partial void OnCenterTeamChanging(string value);
    partial void OnCenterTeamChanged();
    partial void OnDevelopPlanChanging(string value);
    partial void OnDevelopPlanChanged();
    partial void OnStudentResultChanging(string value);
    partial void OnStudentResultChanged();
    partial void OnTeacherResultChanging(string value);
    partial void OnTeacherResultChanged();
    #endregion
		
		public SysSet()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SysID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SysID
		{
			get
			{
				return this._SysID;
			}
			set
			{
				if ((this._SysID != value))
				{
					this.OnSysIDChanging(value);
					this.SendPropertyChanging();
					this._SysID = value;
					this.SendPropertyChanged("SysID");
					this.OnSysIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterAbstruct", DbType="NVarChar(MAX)")]
		public string CenterAbstruct
		{
			get
			{
				return this._CenterAbstruct;
			}
			set
			{
				if ((this._CenterAbstruct != value))
				{
					this.OnCenterAbstructChanging(value);
					this.SendPropertyChanging();
					this._CenterAbstruct = value;
					this.SendPropertyChanged("CenterAbstruct");
					this.OnCenterAbstructChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CenterTeam", DbType="NVarChar(MAX)")]
		public string CenterTeam
		{
			get
			{
				return this._CenterTeam;
			}
			set
			{
				if ((this._CenterTeam != value))
				{
					this.OnCenterTeamChanging(value);
					this.SendPropertyChanging();
					this._CenterTeam = value;
					this.SendPropertyChanged("CenterTeam");
					this.OnCenterTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DevelopPlan", DbType="NVarChar(MAX)")]
		public string DevelopPlan
		{
			get
			{
				return this._DevelopPlan;
			}
			set
			{
				if ((this._DevelopPlan != value))
				{
					this.OnDevelopPlanChanging(value);
					this.SendPropertyChanging();
					this._DevelopPlan = value;
					this.SendPropertyChanged("DevelopPlan");
					this.OnDevelopPlanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentResult", DbType="NVarChar(MAX)")]
		public string StudentResult
		{
			get
			{
				return this._StudentResult;
			}
			set
			{
				if ((this._StudentResult != value))
				{
					this.OnStudentResultChanging(value);
					this.SendPropertyChanging();
					this._StudentResult = value;
					this.SendPropertyChanged("StudentResult");
					this.OnStudentResultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeacherResult", DbType="NVarChar(MAX)")]
		public string TeacherResult
		{
			get
			{
				return this._TeacherResult;
			}
			set
			{
				if ((this._TeacherResult != value))
				{
					this.OnTeacherResultChanging(value);
					this.SendPropertyChanging();
					this._TeacherResult = value;
					this.SendPropertyChanged("TeacherResult");
					this.OnTeacherResultChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LostAndFound_Student")]
	public partial class LostAndFound_Student
	{
		
		private string _Name;
		
		private string _Type;
		
		private string _Room;
		
		private System.DateTime _LostTime;
		
		private System.DateTime _FoundTime;
		
		private string _Description;
		
		private string _ImageName;
		
		public LostAndFound_Student()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Room
		{
			get
			{
				return this._Room;
			}
			set
			{
				if ((this._Room != value))
				{
					this._Room = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LostTime", DbType="Date NOT NULL")]
		public System.DateTime LostTime
		{
			get
			{
				return this._LostTime;
			}
			set
			{
				if ((this._LostTime != value))
				{
					this._LostTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FoundTime", DbType="Date NOT NULL")]
		public System.DateTime FoundTime
		{
			get
			{
				return this._FoundTime;
			}
			set
			{
				if ((this._FoundTime != value))
				{
					this._FoundTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="VarChar(100)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this._ImageName = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LostAndFound_Admin")]
	public partial class LostAndFound_Admin
	{
		
		private string _Name;
		
		private string _Type;
		
		private string _Room;
		
		private System.DateTime _LostTime;
		
		private System.DateTime _AddTime;
		
		private string _Description;
		
		private string _ImageName;
		
		public LostAndFound_Admin()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Room", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Room
		{
			get
			{
				return this._Room;
			}
			set
			{
				if ((this._Room != value))
				{
					this._Room = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LostTime", DbType="Date NOT NULL")]
		public System.DateTime LostTime
		{
			get
			{
				return this._LostTime;
			}
			set
			{
				if ((this._LostTime != value))
				{
					this._LostTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddTime", DbType="DateTime NOT NULL")]
		public System.DateTime AddTime
		{
			get
			{
				return this._AddTime;
			}
			set
			{
				if ((this._AddTime != value))
				{
					this._AddTime = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageName", DbType="VarChar(100)")]
		public string ImageName
		{
			get
			{
				return this._ImageName;
			}
			set
			{
				if ((this._ImageName != value))
				{
					this._ImageName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
